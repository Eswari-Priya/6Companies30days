#User function Template for python3

class Solution:
    def canPair(self, a, k):
        # Code here
        if(len(a)&1):
            return False
        li = [0 for _ in range(k)]
        for i in range(len(a)):
            a[i] = a[i]%k
            li[a[i]]+=1
        # print(li)
        flag = False
        if(li[0]&1):
            return False
        i=1
        j= k-1
        while(i < j):
            if(li[i] != li[j]):
                flag = True
                break
            i += 1
            j -= 1
        if(not flag and (k-1)&1 and li[k//2]&1):
            flag = False
        if(flag):
            return False
        else:
            return True
#{ 
#  Driver Code Starts
#Initial Template for Python 3

if __name__ == '__main__':
    T=int(input())
    for i in range(T):
        n, k = input().split()
        n = int(n)
        k = int(k)
        nums = list(map(int, input().split()))
        ob = Solution()
        ans = ob.canPair(nums, k)
        if(ans):
            print("True")
        else:
            print("False")
# } Driver Code Ends
